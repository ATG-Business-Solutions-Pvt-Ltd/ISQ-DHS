# -*- coding: utf-8 -*-
"""DHS-ISQ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BQkppAHy4ejFzSA_Q7AHDDVbKLztZVEB
"""

#pip install pandas
#pip install openpyxl
#pip install sentence-transformers
#pip install xlsxwriter
#pip install streamlit

import pandas as pd
from sentence_transformers import SentenceTransformer, util
import streamlit as st
import io
import base64

# Load the Sentence Transformer model
model = SentenceTransformer('all-MiniLM-L6-v2')

# Load your data from the Excel file
df = pd.read_excel('/content/DHS-data.xlsx')
# Prepare the data
questions = df['Questions'].astype(str).tolist()  # Convert to strings
answers = df['Answer'].tolist()

# Encode questions to obtain embeddings
question_embeddings = model.encode(questions, convert_to_tensor=True)

def semantic_search(query):
    query_embedding = model.encode(query, convert_to_tensor=True)
    similarities = util.pytorch_cos_sim(query_embedding, question_embeddings)[0]
    most_similar_index = similarities.argmax()
    return answers[most_similar_index]

# Streamlit app
st.title('Get the answers of all your Questions')

uploaded_file = st.file_uploader("Upload an Excel file", type=['xlsx'])
if uploaded_file is not None:
    input_df = pd.read_excel(uploaded_file)
    input_df['Answers'] = input_df['Questions'].astype(str).apply(semantic_search)  # Convert to strings

    # Save answers to an Excel file
    output = io.BytesIO()
    writer = pd.ExcelWriter(output, engine='xlsxwriter')
    input_df.to_excel(writer, sheet_name='Sheet1', index=False)
    writer.save()
    output.seek(0)

    # Create a download link for the output file
    b64 = base64.b64encode(output.getvalue()).decode()
    href = f'<a href="data:application/octet-stream;base64,{b64}" download="answers.xlsx">Click here to download the answers file</a>'
    st.markdown(href, unsafe_allow_html=True)